package Vistas;

import AccesoDatos.DietaComidaData;
import AccesoDatos.DietaData;
import Entidades.Dieta;
import Entidades.DietaComida;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ruben
 */
public class ModificarDieta extends javax.swing.JInternalFrame {

    private DietaData dietaData;
    private ArrayList<Dieta> listaDietas;
    private DefaultTableModel modelo;

    /**
     * Creates new form ModificarDieta
     */
    public ModificarDieta() {
        initComponents();
        dietaData = new DietaData();
        modelo = (DefaultTableModel) jTDietaComida.getModel();
        llenarCB();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTDietaComida = new javax.swing.JTable();
        jBGuardar = new javax.swing.JButton();
        jBModifcar = new javax.swing.JButton();
        jBEliminar = new javax.swing.JButton();
        jCBDietas = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 204));

        jTDietaComida.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Comida", "PorciÃ³n", "Horario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTDietaComida);
        if (jTDietaComida.getColumnModel().getColumnCount() > 0) {
            jTDietaComida.getColumnModel().getColumn(0).setResizable(false);
            jTDietaComida.getColumnModel().getColumn(1).setResizable(false);
            jTDietaComida.getColumnModel().getColumn(2).setResizable(false);
            jTDietaComida.getColumnModel().getColumn(3).setResizable(false);
        }

        jBGuardar.setText("Agregar");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        jBModifcar.setText("Modificar");

        jBEliminar.setText("Eliminar");
        jBEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarActionPerformed(evt);
            }
        });

        jCBDietas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBDietasItemStateChanged(evt);
            }
        });
        jCBDietas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBDietasActionPerformed(evt);
            }
        });

        jLabel1.setText("Seleccione dieta:");

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jBGuardar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jBModifcar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jBEliminar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jCBDietas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopPane1Layout.createSequentialGroup()
                        .addComponent(jBGuardar)
                        .addGap(74, 74, 74)
                        .addComponent(jBModifcar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 139, Short.MAX_VALUE)
                        .addComponent(jBEliminar)
                        .addGap(110, 110, 110)
                        .addComponent(jButton1))
                    .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jDesktopPane1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addGap(206, 206, 206)
                            .addComponent(jCBDietas, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 588, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jDesktopPane1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBDietas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBGuardar)
                    .addComponent(jBModifcar)
                    .addComponent(jBEliminar)
                    .addComponent(jButton1))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
//        Dieta dietaId = (Dieta)jCBDietas.getSelectedItem();
//        int idDieta = dietaId.getIdDieta();
//        DietaComidaData dc = new DietaComidaData();
//        dc.nuevaDieta(dc);
        if (jCBDietas.getSelectedItem() != null) {
            FormularioDietaComida fdc = new FormularioDietaComida();
            jDesktopPane1.add(fdc);
            fdc.setVisible(true);
            fdc.moveToFront();

        }

    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCBDietasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBDietasActionPerformed

    }//GEN-LAST:event_jCBDietasActionPerformed

    private void jCBDietasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBDietasItemStateChanged
        limpiar();
        Dieta dieta = (Dieta) jCBDietas.getSelectedItem();
        int id = dieta.getIdDieta();
        llenarTablaDietaComida(id);
    }//GEN-LAST:event_jCBDietasItemStateChanged

    private void jBEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarActionPerformed
        DietaComidaData dcd = new DietaComidaData();
        int filaSeleccionada = jTDietaComida.getSelectedRow();
        int id = (Integer) jTDietaComida.getValueAt(filaSeleccionada, 0);
        dcd.eliminarDietaComida(id);
        jCBDietasItemStateChanged(null);
    }//GEN-LAST:event_jBEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBEliminar;
    private javax.swing.JButton jBGuardar;
    private javax.swing.JButton jBModifcar;
    private javax.swing.JButton jButton1;
    public static javax.swing.JComboBox<Dieta> jCBDietas;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTDietaComida;
    // End of variables declaration//GEN-END:variables

    private void llenarCB() {
        listaDietas = dietaData.listarDietas();
        for (Dieta dieta : listaDietas) {
            jCBDietas.addItem(dieta);
        }
    }

    private void llenarTablaDietaComida(int id) {
        ArrayList<DietaComida> listaDietaCom;
        DietaComidaData dcd = new DietaComidaData();
        listaDietaCom = dcd.listaDietaComida(id);
        for (DietaComida dietaComida : listaDietaCom) {
            modelo.addRow(new Object[]{dietaComida.getIdDietaComida(), dietaComida.getComida().getNombre(),
                dietaComida.getPorcion(), dietaComida.getHorarioComida()});
        }
    }

    public void limpiar() {
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }
}
